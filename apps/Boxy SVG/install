#!/bin/bash
#wget -qO- https://raw.githubusercontent.com/Botspot/Boxy-SVG-RPi/main/install.sh | bash

link="$(wget -qO- --header 'Snap-Device-Series: 16' http://api.snapcraft.io/v2/snaps/info/boxy-svg | sed 's/},{/}\n{/g' | grep arm64 | tr '{,}' '\n' | grep '"url":"' | sed 's/^"url":"//g' | sed 's/"$//g')"

if [ -z "$link" ];then
  error "Failed to find a link to download the Boxy SVG snap from! Be sure you are connected to the Internet."
fi

status "Downloading the Boxy SVG snap package..."
wget "$link" -O /tmp/boxy.snap || exit 1

status "Mounting the snap package to copy files out..."
mkdir -p /tmp/boxy-mount
sudo umount -q /tmp/boxy-mount
sudo mount -t squashfs -o ro /tmp/boxy.snap /tmp/boxy-mount || error "Failed to mount boxy.snap to copy files out!"

status -n "Copying files... "
sudo rm -rf /opt/boxy-svg
sudo cp -a /tmp/boxy-mount/opt/boxy-svg /opt || error "Failed to copy files from mounted snap to /opt!"
sudo cp /tmp/boxy-mount/meta/gui/boxy-svg.svg /opt/boxy-svg
sudo cp "$(dirname "$0")/icon-64.png" /opt/boxy-svg
sudo umount /tmp/boxy-mount
sudo rm -rf /tmp/boxy.snap /tmp/boxy-mount
status_green "Done"

#recompile electron app on armhf
if [ $arch == 32 ];then
  
  "${DIRECTORY}/manage" install-if-not-installed Node.js || error "Failed to install Node.js! This is necessary to recompile Boxy SVG on your 32-bit OS."
  
  #load nvm now
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
  
  npm install -g electron/asar electron-packager
  
  if [ $? != 0 ];then
    #fixes npm bug where asar is already installed but it tries to install electron/asar on top of it
    rm -f ~/.nvm/versions/node/*/bin/asar
    npm install -g electron/asar electron-packager || error "NPM failed to install asar and electron-packager!"
  fi
  
  rm -rf /tmp/boxy-sourcecode || exit 1
  asar extract /opt/boxy-svg/resources/app.asar /tmp/boxy-sourcecode || error "Failed to extract boxy svg source code!"
  
  cd /tmp/boxy-sourcecode
  npm install
  #npm install -g electron-packager
  electron-packager ./ --electron-version=21.3.4 --arch=armv7l --executable-name=boxy-svg --icon=boxy-svg.svg || error "Failed to package boxysvg electron app!"
  
  #copy new armhf files
  sudo cp -a '/tmp/boxy-sourcecode/Boxy SVG-linux-armv7l'/. /opt/boxy-svg || error "Failed to copy new armv7l packages to /opt/boxy-svg"
  rm -rf '/tmp/boxy-sourcecode/Boxy SVG-linux-armv7l'
  
  #Use armhf linux-fonts-manager
  rm -rf /tmp/node_modules /tmp/boxy-sourcecode
  cd /tmp && npm install local-fonts-manager || exit 1
  sudo mv -f /tmp/node_modules/local-fonts-manager/build/Release/LinuxFontsManager.node /opt/boxy-svg/resources/app.asar.unpacked/node_modules/local-fonts-manager/build/Release
  rm -rf /tmp/node_modules
fi

#compile xseticon to set the program's window icon
if ! command -v xseticon >/dev/null ;then
  echo "Compiling xseticon..."
  cd /tmp
  git_clone https://github.com/xeyownt/xseticon || exit 1
  cd /tmp/xseticon
  install_packages libxmu-headers libgd-dev libxmu-dev libglib2.0-dev || exit 1
  make || error "Failed to compile xseticon with the 'make' command!"
  sudo cp -f "$PWD/xseticon" /usr/local/bin
  (purge_packages)
  cd $HOME
  rm -rf /tmp/xseticon
fi

#create a runscript to set the window icon
cat << "EOF" | sudo tee /usr/local/bin/boxy-svg >/dev/null
#!/bin/bash
#This script runs Boxy SVG and will set its window-icon.

#determine how many Boxy SVG windows are already open
numwindows="$(xwininfo -tree -root | grep '^        .*("boxy.svg" "Boxy.SVG")' -i | wc -l)"

#run boxy-svg in background
/opt/boxy-svg/boxy-svg "$@" &
pid=$!
#if this script is terminated, also kill boxy svg
trap "kill $pid &>/dev/null" EXIT

#run a loop in the background to always check for new boxy svg windows and set the window icon
IFS=$'\n'
if [ $numwindows == 0 ];then #only run one instance of the daemon
  while true;do 
    if [ "$numwindows" != "$(xwininfo -tree -root | grep '^        .*("boxy.svg" "Boxy.SVG")' -i | wc -l)" ];then
      for windowid in $(xwininfo -tree -root | grep '^        .*("boxy.svg" "Boxy.SVG")' -i | awk '{print $1}') ;do
        xseticon -id $windowid "/opt/boxy-svg/icon-64.png"
      done
      numwindows="$(xwininfo -tree -root | grep '^        .*("boxy.svg" "Boxy.SVG")' -i | wc -l)"
    fi
    sleep 0.5
  done &
  loop_pid=$!
fi

#wait for window background-process to be closed before returning to shell
wait $pid

#stop the icon-setting loop
code=$?
kill $loop_pid &>/dev/null
exit $code
EOF
sudo chmod +x /usr/local/bin/boxy-svg

if [ -z "$(cat ~/.config/mimeapps.list | grep 'boxy-svg.desktop')" ];then
  echo "Associating the SVG mimetype with Boxy SVG..."
  echo "image/svg+xml=boxy-svg.desktop;" >> ~/.config/mimeapps.list
fi

echo "[Desktop Entry]
Name=Boxy SVG
Comment=Scalable Vector Graphics (SVG) editor
Exec=boxy-svg %f
Icon=/opt/boxy-svg/boxy-svg.svg
Type=Application
Terminal=false
Categories=Graphics
StartupWMClass=Boxy SVG
MimeType=image/svg+xml;image/png;image/jpeg;image/gif;image/webp;application/pdf;application/illustrator;
Keywords=SVG;Vector;Graphics;Editor;" | sudo tee /usr/share/applications/boxy-svg.desktop >/dev/null
